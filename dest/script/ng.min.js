var myModule = angular.module("myModule", [ "ui.router", "ngAnimate", "myCtrl", "myDirective", "myFilter", "myService" ]);

myModule.config([ "$stateProvider", "$urlRouterProvider", function(a, b) {
    b.otherwise("/index"), a.state("index", {
        url: "/index",
        views: {
            "": {
                templateUrl: "tpl/index.html",
                controller: "IndexCtrl"
            },
            "search@index": {
                templateUrl: "tpl/search_top.html",
                controller: "SearchTopCtrl"
            },
            "main@index": {
                templateUrl: "tpl/index_main.html",
                controller: "IndexMainCtrl"
            }
        }
    }).state("search", {
        url: "/search",
        views: {
            "": {
                templateUrl: "tpl/search.html",
                controller: "SearchCtrl"
            },
            "search@search": {
                templateUrl: "tpl/search_top.html",
                controller: "SearchTopCtrl"
            },
            "main@search": {
                templateUrl: "tpl/search_main.html",
                controller: "SearchMainCtrl"
            }
        }
    }).state("cate", {
        url: "/cate",
        views: {
            "": {
                templateUrl: "tpl/cate.html",
                controller: "CateCtrl"
            },
            "top@cate": {
                templateUrl: "tpl/nav_top.html",
                controller: "NavTopCtrl"
            },
            "nav@cate": {
                templateUrl: "tpl/cate_nav.html",
                controller: "CateNavCtrl"
            },
            "main@cate": {
                templateUrl: "tpl/cate_main.html",
                controller: "CateMainCtrl"
            }
        }
    }).state("store", {
        url: "/store/:sid",
        views: {
            "": {
                templateUrl: "tpl/store.html",
                controller: "StoreCtrl"
            },
            "top@store": {
                templateUrl: "tpl/store_top.html",
                controller: "NavTopCtrl"
            },
            "main@store": {
                templateUrl: "tpl/store_main.html",
                controller: "StoreMainCtrl"
            }
        }
    }).state("stored", {
        url: "/stored/:sid",
        views: {
            "": {
                templateUrl: "tpl/stored.html",
                controller: "StoredCtrl"
            },
            "top@stored": {
                templateUrl: "tpl/nav_top.html",
                controller: "NavTopCtrl"
            },
            "main@stored": {
                templateUrl: "tpl/stored_main.html",
                controller: "StoredMainCtrl"
            }
        }
    }).state("goods", {
        url: "/goods/:gid",
        views: {
            "": {
                templateUrl: "tpl/goods.html",
                controller: "GoodsCtrl"
            },
            "top@goods": {
                templateUrl: "tpl/nav_top.html",
                controller: "NavTopCtrl"
            },
            "nav@goods": {
                templateUrl: "tpl/goods_nav.html",
                controller: "GoodsNavCtrl"
            },
            "main@goods": {
                templateUrl: "tpl/goods_main.html",
                controller: "GoodsMainCtrl"
            }
        }
    }).state("promotion", {
        url: "/promotion",
        views: {
            "": {
                templateUrl: "tpl/promotion.html",
                controller: "PromotionCtrl"
            },
            "top@promotion": {
                templateUrl: "tpl/nav_top.html",
                controller: "NavTopCtrl"
            },
            "main@promotion": {
                templateUrl: "tpl/promotion_main.html",
                controller: "PromotionMainCtrl"
            }
        }
    }).state("hot", {
        url: "/hot",
        views: {
            "": {
                templateUrl: "tpl/hot.html",
                controller: "HotCtrl"
            },
            "top@hot": {
                templateUrl: "tpl/nav_top.html",
                controller: "NavTopCtrl"
            },
            "main@hot": {
                templateUrl: "tpl/hot_main.html",
                controller: "HotMainCtrl"
            }
        }
    });
} ]);

var myCtrl = angular.module("myCtrl", []);

/*
 $scope.pageClass="index";
 $http.jsonp('http://192.168.1.199/ws/handset/v2/map/cityList?jsonp=mzhan').success(function (data){
 mzhan(data);
 });
 $window.mzhan = function (data) {
 var data = JSON.parse(data);
 console.log(data.response);
 return data;
 };
 http://192.168.1.199/
 http://handset.line0.com/
 */
myCtrl.controller("SearchTopCtrl", [ "$scope", "$rootScope", "$state", "$stateParams", function(a, b, c, d) {
    a.searchShop = function() {
        b.shopName = a.shopName, null != b.shopName && (b.shopName = trim(b.shopName)), 
        "" === b.shopName && (b.shopName = void 0), (null != a.shopName || c.includes("index")) && c.go("search", d, {
            reload: !0
        });
    }, a.goback = function() {
        window.history.back();
    };
} ]), myCtrl.controller("NavTopCtrl", [ "$scope", "$rootScope", function(a) {
    a.goback = function() {
        window.history.back();
    };
} ]), myCtrl.controller("IndexCtrl", [ "$scope", "$rootScope", function(a) {
    a.pageClass = "index";
} ]), myCtrl.controller("IndexMainCtrl", [ "$scope", "$rootScope", "$http", "$window", "$state", "$stateParams", function(a, b, c, d, e, f) {
    function g() {
        //var url = '../data/shopList.json?jsonp=getShopListByName';
        var a = "http://handset.line0.com/ws/handset/v2/mcms/bannerList?jsonp=getBannerList&clientFlag=line0123456789abcdef987opqxyzline0&cityId=" + cityId + "&areaId=null&userX=" + longitude + "&userY=" + latitude;
        c.jsonp(a).success();
    }
    a.$on("$viewContentLoaded", function() {
        $.getScript("lib/other/iscroll-probe.min.js", function() {
            myScrollIndex = new IScroll("#scroller", {
                tap: !0,
                preventDefault: !1
            }), document.addEventListener("touchmove", function(a) {
                a.preventDefault();
            }, !1);
        });
    }), getLocation(g), d.getBannerList = function(b) {
        //console.log(data);
        a.bannerList = b.response.bannerList, console.log(a.bannerList), a.banner();
    }, /* 轮播图 */
    a.banner = function() {
        var a = $(".swipe-wrap").find("div").length;
        $.getScript("lib/other/swipe.min.js", function() {
            // 添加添加小按钮
            var b = "", c = $(".swipe-wrap").find("div"), d = c.length;
            if (d >= 2) {
                for (var e = 0; d > e; e++) b += "<li></li>";
                $("#slider-num ul").append(b), $("#slider-num ul").find("li").first().addClass("on");
            }
            // swipe
            window.mySwipe = new Swipe(document.getElementById("slider"), {
                auto: 3e3,
                continuous: !0,
                disableScroll: !0,
                stopPropagation: !1,
                callback: function(b) {
                    myScrollIndex.refresh(), 2 == a && (2 == b && (b = 0), 3 == b && (b = 1));
                    var c = $("#slider-num").find("li");
                    c.eq(b).addClass("on").siblings().removeClass();
                }
            });
        });
    }, /* 分类 */
    a.CateCidClick0 = function() {
        b.cid = 0, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick1 = function() {
        b.cid = 1, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick2 = function() {
        b.cid = 2, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick3 = function() {
        b.cid = 3, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick4 = function() {
        b.cid = 4, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick5 = function() {
        b.cid = 5, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick6 = function() {
        b.cid = 6, e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick7 = function() {
        b.cid = 7, e.go("cate", f, {
            reload: !0
        });
    };
} ]), myCtrl.controller("SearchCtrl", [ "$scope", "$rootScope", "$http", "$window", function(a) {
    a.pageClass = "search";
} ]), myCtrl.controller("SearchMainCtrl", [ "$scope", "$rootScope", "$http", "$window", function(a, b, c, d) {
    //console.log(pullDownEl);
    //初始化页面数据——定义
    function e() {
        var a = "http://handset.line0.com/ws/handset/v2/search/shop?jsonp=getShopList&cityId=" + cityId + "&userX=" + longitude + "&userY=" + latitude + "&toPage=1&pageRows=100&keyword=" + b.shopName;
        //var url = '../data/shopList.json?jsonp=getShopListByName';
        c.jsonp(a).success();
    }
    //加载更多数据-----定义
    function f() {
        //console.log($scope.curPage, $scope.totalPage);
        // 判断是否显示加载更多数据
        if (a.curPage = parseInt(a.curPage) + 1, a.curPage > a.totalPage) return g.className = "show", 
        g.innerHTML = "没有更多数据了", myScrollSearch.refresh(), void (h = 0);
        var d = "http://handset.line0.com/ws/handset/v2/search/shop?jsonp=getMoreShopByPage&cityId=1&userX=118.793527&userY=32.013613&toPage=" + a.curPage + "&pageRows=100&keyword=" + b.shopName;
        //var url = '../data/shopList.json?jsonp=getMoreShopByPage';
        c.jsonp(d).success();
    }
    a.shopList = [];
    //$rootScope.shopName = '饭';		/* 自来水 村 米线 米 鱼 */
    //console.log($rootScope.shopName);
    var g = (document.getElementById("shop-list-pullUp"), document.getElementById("shop-list-pullDown")), h = 0;
    d.getShopList = function(b) {
        //console.log(data);
        a.shopList = b.response.shopList, a.shopPage = b.response.page, a.totalRow = a.shopPage.totalRows, 
        a.curPage = a.shopPage.curPage, a.totalPage = a.shopPage.pageAmount, //console.log($scope.shopList.length, $scope.shopList);
        1 === a.shopList.length && void 0 == a.shopList[0].shopId && (a.shopList = null, 
        a.searchListEmpty = !0, a.show_error = "米有找到相关的店铺，请换个关键字试试"), a.StateSearchRefresh = !1, 
        $.getScript("lib/other/iscroll-probe.min.js", function() {
            myScrollSearch = new IScroll("#scroller", {
                tap: !0,
                preventDefault: !1,
                probeType: 2
            }), document.addEventListener("touchmove", function(a) {
                a.preventDefault();
            }, !1), // 加载更多数据----绑定滚动事件
            myScrollSearch.on("scroll", function() {
                //console.log(this.y, (this.maxScrollY - 5));
                0 != h || g.className.match("show|loading") || this.y > 5 || this.y < this.maxScrollY - 5 && (//下拉准备刷新效果
                //console.log('down');
                g.className = "show", myScrollSearch.refresh(), h = 1);
            }), myScrollSearch.on("scrollEnd", function() {
                1 == h && g.className.match("show|loading") && (g.className = "loading", g.innerHTML = '<i class="icon-spin animate-spin"></i>', 
                h = 2, f());
            });
        });
    }, d.getMoreShopByPage = function(b) {
        //console.log(data);
        a.shopList = a.shopList.concat(b.response.shopList), //console.log($scope.shopList.length, $scope.shopList);
        //console.log($scope.shopList);
        $.getScript("lib/other/iscroll-probe.min.js", function() {
            g.className = "", g.innerHTML = "下拉准备刷新...", myScrollSearch.refresh(), h = 0;
        });
    }, //初始化数据调用
    a.searchListExist = !0, a.searchListEmpty = !1, a.StateSearchRefresh = !0, null != b.shopName ? getLocation(e) : (a.searchListEmpty = !0, 
    a.show_error = "请输入商店名称");
} ]), myCtrl.controller("CateCtrl", [ "$scope", "$rootScope", "$http", "$window", function(a) {
    a.pageClass = "cate", a.title = "商家分类";
} ]), myCtrl.controller("CateNavCtrl", [ "$scope", "$rootScope", "$http", "$window", "$state", "$stateParams", function(a, b, c, d, e, f) {
    b.cateDistanceText = void 0 == b.cateDistanceText ? "距离范围" : b.cateDistanceText, 
    b.cateCidText = void 0 == b.cateCidText ? "商家分类" : b.cateCidText, b.cateSortText = void 0 == b.cateSortText ? "选择排序" : b.cateSortText, 
    /* 分类选择 */
    a.cateInit = function() {
        a.CateMask = !1, a.CateDistanceList = !1, a.CateCidList = !1, a.CateSortList = !1, 
        a.cateDistanceClass = "", a.cateCidClass = "", a.cateSortClass = "";
    }, a.cateInit(), a.CateDistanceClick = function() {
        a.CateDistanceList !== !0 ? (a.cateInit(), a.CateMask = !0, a.CateDistanceList = !0, 
        a.cateDistanceClass = "icon-down02") : a.cateInit();
    }, a.CateCidClick = function() {
        a.CateCidList !== !0 ? (a.cateInit(), a.CateMask = !0, a.CateCidList = !0, a.cateCidClass = "icon-down02") : a.cateInit();
    }, a.CateSortClick = function() {
        a.CateSortList !== !0 ? (a.cateInit(), a.CateMask = !0, a.CateSortList = !0, a.cateSortClass = "icon-down02") : a.cateInit();
    }, a.CateDistanceClick3000 = function() {
        b.distance = 3e3, b.cateDistanceText = "3.0km内 运费6元", e.go("cate", f, {
            reload: !0
        });
    }, a.CateDistanceClick4500 = function() {
        b.distance = 4500, b.cateDistanceText = "4.5km内 运费10元", e.go("cate", f, {
            reload: !0
        });
    }, a.CateDistanceClick6000 = function() {
        b.distance = 6e3, b.cateDistanceText = "6.0km内 运费15元", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick0 = function() {
        b.cid = 0, b.cateCidText = "全部", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick1 = function() {
        b.cid = 1, b.cateCidText = "中式餐厅", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick2 = function() {
        b.cid = 2, b.cateCidText = "馄饨面食", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick3 = function() {
        b.cid = 3, b.cateCidText = "便当套餐", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick4 = function() {
        b.cid = 4, b.cateCidText = "西式餐点", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick5 = function() {
        b.cid = 5, b.cateCidText = "日韩料理", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick6 = function() {
        b.cid = 6, b.cateCidText = "下午茶", e.go("cate", f, {
            reload: !0
        });
    }, a.CateCidClick7 = function() {
        b.cid = 7, b.cateCidText = "休闲小吃", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick0 = function() {
        b.sort = 0, b.cateSortText = "默认排序", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick1 = function() {
        b.sort = 1, b.cateSortText = "距离由近到远", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick2 = function() {
        b.sort = 2, b.cateSortText = "距离由远到近", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick3 = function() {
        b.sort = 3, b.cateSortText = "起送价由低到高", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick4 = function() {
        b.sort = 4, b.cateSortText = "起送价由高到低", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick5 = function() {
        b.sort = 5, b.cateSortText = "店家配送优先", e.go("cate", f, {
            reload: !0
        });
    }, a.CateSortClick6 = function() {
        b.sort = 6, b.cateSortText = "零号线配送优先", e.go("cate", f, {
            reload: !0
        });
    };
} ]), myCtrl.controller("CateMainCtrl", [ "$scope", "$rootScope", "$http", "$window", function(a, b, c, d) {
    //console.log(pullDownEl);
    //初始化页面数据——定义
    function e() {
        var a = "http://handset.line0.com/ws/handset/v2/shop/shopList?jsonp=getShopList&cityId=" + cityId + "&userX=" + longitude + "&userY=" + latitude + "&toPage=1&pageRows=20&shopType=" + b.cid + "&distance=" + b.distance + "&sort=" + b.sort;
        //console.log(url);
        c.jsonp(a).success();
    }
    //加载更多数据-----定义
    function f() {
        //console.log($scope.curPage, $scope.totalPage);
        // 判断是否显示加载更多数据
        if (a.curPage = parseInt(a.curPage) + 1, a.curPage > a.totalPage) return g.className = "show", 
        g.innerHTML = "没有更多数据了", myScrollCate.refresh(), void (h = 0);
        var d = "http://handset.line0.com/ws/handset/v2/shop/shopList?jsonp=getMoreShopByPage&cityId=" + cityId + "&userX=" + longitude + "&userY=" + latitude + "&toPage=" + a.curPage + "&pageRows=20&shopType=" + b.cid + "&distance=" + b.distance + "&sort=" + b.sort;
        c.jsonp(d).success();
    }
    //初始化数据
    //console.log($rootScope.cid);
    b.cid = void 0 == b.cid ? 0 : b.cid, b.distance = void 0 == b.distance ? 3e3 : b.distance, 
    b.sort = void 0 == b.sort ? 0 : b.sort;
    //console.log($rootScope.cid);
    var g = (document.getElementById("shop-list-pullUp"), document.getElementById("shop-list-pullDown")), h = 0;
    d.getShopList = function(b) {
        //console.log(data);
        a.shopList = b.response.shopList, a.shopPage = b.response.page, a.totalRow = a.shopPage.totalRows, 
        a.curPage = a.shopPage.curPage, a.totalPage = a.shopPage.pageAmount, //console.log($scope.shopPage);
        1 === a.shopList.length && void 0 == a.shopList[0].shopId && (a.shopList = null, 
        a.cateListEmpty = !0, a.show_error = "米有找到相关的店铺"), a.StateCateRefresh = !1, $.getScript("lib/other/iscroll-probe.min.js", function() {
            myScrollCate = new IScroll("#scroller", {
                tap: !0,
                preventDefault: !1,
                probeType: 2
            }), document.addEventListener("touchmove", function(a) {
                a.preventDefault();
            }, !1), // 加载更多数据----绑定滚动事件
            myScrollCate.on("scroll", function() {
                //console.log(this.y, (this.maxScrollY - 5));
                0 != h || g.className.match("show|loading") || this.y > 5 || this.y < this.maxScrollY - 5 && (//下拉准备刷新效果
                //console.log('down');
                g.className = "show", myScrollCate.refresh(), h = 1);
            }), myScrollCate.on("scrollEnd", function() {
                1 == h && g.className.match("show|loading") && (g.className = "loading", g.innerHTML = '<i class="icon-spin animate-spin"></i>', 
                h = 2, f());
            });
        });
    }, d.getMoreShopByPage = function(b) {
        //console.log(data);
        a.shopList = a.shopList.concat(b.response.shopList), //console.log($scope.shopList.length, $scope.shopList);
        $.getScript("lib/other/iscroll-probe.min.js", function() {
            g.className = "", g.innerHTML = "下拉准备刷新...", myScrollCate.refresh(), h = 0;
        });
    }, //初始化数据调用
    a.cateListExist = !0, a.cateListEmpty = !1, a.StateCateRefresh = !0, getLocation(e);
} ]), myCtrl.controller("StoreCtrl", [ "$scope", "$rootScope", "$http", "$window", "$stateParams", function(a, b, c, d, e) {
    //初始化页面数据——定义
    function f() {
        //var url = '/data/shopDetail.json?jsonp=getStore&clientFlag=line0123456789abcdef987opqxyzline0&cityId=' + cityId + '&userX=' + longitude + '&userY=' + latitude + '&shopId=' + $rootScope.storeId;
        var a = "http://handset.line0.com/ws/handset/v2/shop/shopDetail?jsonp=getStore&clientFlag=line0123456789abcdef987opqxyzline0&cityId=" + cityId + "&userX=" + longitude + "&userY=" + latitude + "&shopId=" + e.sid;
        //console.log(url);
        c.jsonp(a).success();
    }
    a.pageClass = "store", a.title = "", //初始化数据
    b.storeId = e.sid, //console.log($rootScope.storeId);
    a.StateStoreTop = !1, a.StateStoreMain = !1, a.StateStoreRefresh = !0, getLocation(f), 
    d.getStore = function(e) {
        var f = document.getElementById("scroller-left"), g = document.getElementById("scroller-right");
        //判断推荐
        if (//console.log(data.response);
        a.store = e.response.shop, a.cate = e.response.shopProdTypeList, a.tj = e.response.tuijianProdList, 
        a.prod = [], a.cateTypeId = [], a.bill = {}, 1 !== e.response.errorCode && alert(e.response.msg), 
        void 0 !== a.tj[0].productName) {
            for (var h = JSON.parse('{"typeName": "热销推荐", "typeId": "0000"}'), i = 0; i < a.tj.length; i++) a.tj[i].shopProdTypeId = "0000", 
            a.tj[i].buyNum = 0;
            a.cate = [ h ].concat(a.cate), a.prod = a.prod.concat(a.tj);
        } else a.tj = null;
        for (var j = a.prod, i = 0; i < a.cate.length; i++) //console.log($scope.cate[i].typeId);
        if ("0000" !== a.cate[i].typeId) {
            var k = "http://handset.line0.com/ws/handset/v2/shop/productList?jsonp=getStoreCate&clientFlag=line0123456789abcdef987opqxyzline0&shopId=" + b.storeId + "&shopProdTypeId=" + a.cate[i].typeId;
            //console.log(url);
            c.jsonp(k).success();
        }
        d.getStoreCate = function(b) {
            //console.log(data.response.productMap);
            for (var c in b.response.productMap) {
                //console.log(data.response.productMap[prop].length);
                for (var d = 0; d < b.response.productMap[c].length; d++) b.response.productMap[c][d].buyNum = 0;
                j = j.concat(b.response.productMap[c]);
            }
            a.prod = j;
            //console.log($scope.prod, $scope.prod.length);
            var e = function() {
                for (var b = 0, c = 0, d = a.prod.length; d > c; c++) b = parseFloat(b) + parseFloat(a.prod[c].priceDown) * parseFloat(a.prod[c].buyNum);
                //console.log(total);
                a.bill.totalCart = b, a.bill.discount = b;
            };
            a.$watch("prod", e, !0);
        }, a.StateStoreTop = !0, a.StateStoreMain = !0, a.StateStoreRefresh = !1, a.StateNotice = !1, 
        a.stockCart = !0, a.stockSelect = !1, $.getScript("lib/other/iscroll-probe.min.js", function() {
            myScrollStoreLeft = new IScroll("#scroller-left", {
                tap: !0,
                preventDefault: !0
            }), myScrollStoreRight = new IScroll("#scroller-right", {
                tap: !0,
                preventDefault: !0,
                preventDefaultException: {
                    tagName: /^(A|INPUT|TEXTAREA|BUTTON|SELECT)$/
                }
            }), document.addEventListener("touchmove", function(a) {
                a.preventDefault();
            }, !1);
        }), //公告
        0 !== a.store.promotionInfo.length && (a.StateNotice = !0, f.className = "up", g.className = "up"), 
        a.hideNotice = function() {
            a.StateNotice = !1, f.className = "", g.className = "", myScrollStoreLeft.refresh(), 
            myScrollStoreRight.refresh();
        };
    };
} ]), myCtrl.controller("StoreMainCtrl", [ "$scope", "$rootScope", "$http", "$window", "$stateParams", function() {} ]), 
myCtrl.controller("StoredCtrl", [ "$scope", "$rootScope", "$http", "$window", "$stateParams", function(a) {
    a.pageClass = "stored", a.title = "商铺详情";
} ]), myCtrl.controller("StoredMainCtrl", [ "$scope", "$rootScope", "$http", "$window", "$stateParams", function(a, b, c, d, e) {
    //初始化页面数据——定义
    function f() {
        //http://handset.line0.com
        //http://192.168.1.199
        //var url = '/data/shopDetail.json?jsonp=getStore&clientFlag=line0123456789abcdef987opqxyzline0&cityId=' + cityId + '&userX=' + longitude + '&userY=' + latitude + '&shopId=' + $stateParams.sid;
        //var url = 'http://192.168.1.199/ws/handset/v2/shop/shopDetail?jsonp=getStore&clientFlag=line0123456789abcdef987opqxyzline0&cityId=' + cityId + '&userX=' + longitude + '&userY=' + latitude + '&shopId=' + $stateParams.sid + '&version=17';
        var a = "http://handset.line0.com/ws/handset/v2/shop/shopDetail?jsonp=getStore&clientFlag=line0123456789abcdef987opqxyzline0&cityId=" + cityId + "&userX=" + longitude + "&userY=" + latitude + "&shopId=" + e.sid;
        //console.log(url);
        c.jsonp(a).success();
    }
    function g() {
        var a = "http://handset.line0.com/ws/handset/v2/appraise/selectListByShopId?jsonp=getStoreComment&toPage=1&pageRows=200&shopId=" + e.sid;
        c.jsonp(a).success();
    }
    a.StateStoredMain = !1, a.StateStoredRefresh = !0, a.StateCommentShow = !1, a.StateCommentRefresh = !0, 
    a.curPage = 1, $.getScript("lib/other/iscroll-probe.min.js", function() {
        myScrollStored = new IScroll("#scroller", {
            tap: !0,
            preventDefault: !1
        }), document.addEventListener("touchmove", function(a) {
            a.preventDefault();
        }, !1);
    }), getLocation(f), d.getStore = function(b) {
        //console.log(data.response);
        a.store = b.response.shop, //console.log($scope.store);
        a.store.remark = trim(a.store.remark), a.StateStoreRemark = 0 == a.store.remark ? !1 : !0, 
        a.StateStoreAnounce = 0 == a.store.promotionInfo && 0 == a.store.shopAnounce ? !1 : !0, 
        a.StateStoredMain = !0, a.StateStoredRefresh = !1, g();
    }, d.getStoreComment = function(b) {
        a.comments = b.response.appraiseList, //console.log($scope.comments);
        a.StateCommentShow = !0, a.StateCommentRefresh = !1, void 0 == a.comments[0].userName ? (a.comments_len = 0, 
        a.comments = null, a.StateCommentShow = !1) : a.comments_len = a.comments.length, 
        $.getScript("lib/other/iscroll-probe.min.js", function() {
            myScrollStored.refresh();
        });
    };
} ]), myCtrl.controller("GoodsCtrl", [ "$scope", "$rootScope", "$http", "$window", "$stateParams", function(a, b, c, d, e) {
    function f() {
        //var url = '/data/goods.json?jsonp=getGoods&clientFlag=line0123456789abcdef987opqxyzline0&cityId=' + cityId + '&userX=' + longitude + '&userY=' + latitude + '&productId=' + $stateParams.gid;
        var a = "http://handset.line0.com/ws/handset/v2/shop/productdetail?jsonp=getGoods&clientFlag=line0123456789abcdef987opqxyzline0&cityId=" + cityId + "&userX=" + longitude + "&userY=" + latitude + "&productId=" + e.gid;
        //console.log(url);
        c.jsonp(a).success();
    }
    // 初始化数据
    a.pageClass = "goods", a.title = "商品详情", a.StateGoodsMain = !1, a.StateGoodsRefresh = !0, 
    a.StateGoodsCommentMain = !1, a.StateGoodsCommentRefresh = !0, a.StateGoodsCommentNull = !1;
    var g = !1, h = !1, i = !1;
    // 商品信息
    0 == g && getLocation(f), d.getGoods = function(b) {
        //console.log(data.response);
        a.goods = b.response.product, //console.log($scope.goods.article.length);
        a.goods.ArticleShow = 0 !== a.goods.article.length ? "ArticleShow" : "ArticleNone", 
        a.StateGoodsNav = !a.StateGoodsNav, a.StateGoodsMain = !a.StateGoodsMain, a.StateGoodsRefresh = !a.StateGoodsRefresh, 
        $("img").load(function() {
            $.getScript("lib/other/iscroll-probe.min.js", function() {
                myScrollGoods = new IScroll("#scroller", {
                    tap: !0,
                    preventDefault: !1
                }), document.addEventListener("touchmove", function(a) {
                    a.preventDefault();
                }, !1), g = !0;
            });
        });
    }, // 用户评论
    a.GoodsCommentCtrl = function() {
        if (0 == h) {
            var b = "http://handset.line0.com/ws/handset/v2/shop/productappraises?jsonp=getGoodsComment&pageNum=1&pageRow=200&productId=" + e.gid;
            //console.log(url);
            c.jsonp(b).success(), d.getGoodsComment = function(b) {
                //console.log(data.response);
                a.comments = b.response.comments, a.totalRows = b.response.totalRows, a.StateGoodsCommentMain = !a.StateGoodsCommentMain, 
                a.StateGoodsCommentRefresh = !a.StateGoodsCommentRefresh, 0 == a.totalRows && (a.comments.msg = "暂无评论", 
                a.StateGoodsCommentMain = !1, a.StateGoodsCommentNull = !0), $.getScript("lib/other/iscroll-probe.min.js", function() {
                    myScrollGoods = new IScroll("#scroller", {
                        tap: !0,
                        preventDefault: !1
                    }), document.addEventListener("touchmove", function(a) {
                        a.preventDefault();
                    }, !1), g = !0;
                });
            };
        }
        h = !0;
    }, // 图文详情
    a.GoodsArticleCtrl = function() {
        if (0 == i) {
            var b = "http://handset.line0.com/ws/handset/v2/shop/productdetailpicture?jsonp=getGoodsHTML";
            //console.log(url);
            c.jsonp(b, {
                params: {
                    productId: e.gid
                }
            }).success(), d.getGoodsHTML = function(b) {
                //console.log(data.response);
                a.productImage = b.response.productImageUrl, $("img").load(function() {
                    $.getScript("lib/other/iscroll-probe.min.js", function() {
                        myScrollGoods = new IScroll("#scroller", {
                            tap: !0,
                            preventDefault: !1
                        }), document.addEventListener("touchmove", function(a) {
                            a.preventDefault();
                        }, !1), g = !0;
                    });
                });
            };
        }
        i = !0;
    };
} ]), myCtrl.controller("GoodsNavCtrl", [ "$scope", "$rootScope", "$http", "$window", "$state", "$stateParams", function() {} ]), 
myCtrl.controller("GoodsMainCtrl", [ "$scope", "$rootScope", "$http", "$window", "$stateParams", function() {} ]), 
myCtrl.controller("PromotionCtrl", [ "$scope", function(a) {
    a.pageClass = "promotion", a.title = "优惠专区";
} ]), myCtrl.controller("PromotionMainCtrl", [ "$scope", "$http", "$window", function(a, b, c) {
    function d() {
        var a = "http://handset.line0.com/ws/handset/v3/mcms/promotion?jsonp=getPromotion", c = {
            params: {
                userX: longitude,
                userY: latitude,
                cityId: cityId,
                toPage: 1,
                pageRows: 100
            }
        };
        b.jsonp(a, c).success();
    }
    a.StatePromotionMain = !1, a.StatePromotionRefresh = !0, getLocation(d), c.getPromotion = function(a) {
        console.log(a.response);
    }, a.StatePromotionMain = !0, a.StatePromotionRefresh = !1, $("img").load(function() {
        $.getScript("lib/other/iscroll-probe.min.js", function() {
            myScrollGoods = new IScroll("#scroller", {
                tap: !0,
                preventDefault: !1
            }), document.addEventListener("touchmove", function(a) {
                a.preventDefault();
            }, !1), goods_detail = !0;
        });
    });
} ]), myCtrl.controller("HotCtrl", [ "$scope", function(a) {
    a.pageClass = "hot", a.title = "热销美食";
} ]), myCtrl.controller("HotMainCtrl", [ "$scope", "$http", "$window", function(a, b, c) {
    function d() {
        //var url = '../data/guess.json?jsonp=getHot';
        var a = "http://handset.line0.com/ws/handset/v3/mcms/guess?jsonp=getHot", c = {
            params: {
                userX: longitude,
                userY: latitude,
                cityId: cityId,
                toPage: 1,
                pageRows: 10
            }
        };
        b.jsonp(a, c).success();
    }
    //加载更多数据-----定义
    function e() {
        //console.log($scope.curPage, $scope.totalPage);
        // 判断是否显示加载更多数据
        if (a.curPage = parseInt(a.curPage) + 1, a.curPage > a.totalPage) return g.className = "show", 
        g.innerHTML = "没有更多数据了", myScrollHot.refresh(), void (f = 0);
        var c = "http://handset.line0.com/ws/handset/v3/mcms/guess?jsonp=getMoreGuess", d = {
            params: {
                userX: longitude,
                userY: latitude,
                cityId: cityId,
                toPage: a.curPage,
                pageRows: 10
            }
        };
        b.jsonp(c, d).success();
    }
    var f = 0, g = document.getElementById("shop-list-pullDown");
    a.StateHotMain = !0, a.StateHotRefresh = !0, $.getScript("lib/other/iscroll-probe.min.js", function() {
        myScrollHot = new IScroll("#scroller", {
            tap: !0,
            preventDefault: !1,
            probeType: 2
        }), document.addEventListener("touchmove", function(a) {
            a.preventDefault();
        }, !1);
    }), getLocation(d), c.getHot = function(b) {
        //console.log(data.response);
        a.guessLikeOnes = b.response.guessLikeOnes, a.curPage = b.response.page.curPage, 
        a.totalPage = b.response.page.pageAmount, //console.log($scope.guessLikeOnes);
        waterfallImgLen = b.response.guessLikeOnes.length;
    }, a.$on("ngRepeatFinished", function() {
        //$('img').load(function () {
        //console.log('start');
        $.getScript("lib/jquery/jq-waterfall.min.js", function() {
            var a = $(".waterfall").find("li");
            a.wookmark({
                container: $(".waterfall"),
                // 该元素的 width 将被用于计算列的数量, 默认是 "window"
                direction: "left",
                // 方向: "left" or "right", 从左->右或从右->左
                itemWidth: "48%",
                // 单元项的宽度
                flexibleWidth: "48%",
                // 单元项的宽度自适应
                fillEmptySpace: !1,
                outerOffset: 10,
                offset: 10,
                // 单元项的间距
                onLayoutChanged: function() {
                    $(".spin_refresh").hide(), $.getScript("lib/other/iscroll-probe.min.js", function() {
                        g.className = "", g.innerHTML = "下拉准备刷新...", f = 0, myScrollHot.refresh(), // 加载更多数据----绑定滚动事件
                        myScrollHot.on("scroll", function() {
                            //console.log(this.y, (this.maxScrollY - 5));
                            0 != f || g.className.match("show|loading") || this.y > 5 || this.y < this.maxScrollY - 5 && (//下拉准备刷新效果
                            //console.log('down');
                            g.className = "show", myScrollHot.refresh(), f = 1);
                        }), myScrollHot.on("scrollEnd", function() {
                            1 == f && g.className.match("show|loading") && (g.className = "loading", g.innerHTML = '<i class="icon-spin animate-spin"></i>', 
                            f = 2, e());
                        });
                    });
                }
            });
        });
    }), c.getMoreGuess = function(b) {
        waterfallImgLen = b.response.guessLikeOnes.length, //console.log(data.response);
        a.guessLikeOnes = a.guessLikeOnes.concat(b.response.guessLikeOnes);
    };
} ]);

var myDirective = angular.module("myDirective", []);

myDirective.directive("storeCate", function() {
    return {
        scope: {},
        restrict: "AE",
        link: function(a, b) {
            b.parent().children().first().addClass("cur"), b.children("button").bind("tap", function() {
                //console.log(scope.$parent.$index);
                b.addClass("cur").siblings().removeClass("cur"), $(".store-some").eq(a.$parent.$index).show().siblings().hide(), 
                myScrollStoreRight.refresh();
            });
        }
    };
}), myDirective.directive("prodtypeid", function() {
    return {
        restrict: "AE",
        scope: {},
        link: function(a, b, c) {
            "0000" == c.prodtypeid && b.show();
        }
    };
}), myDirective.directive("stockCartClick", function() {
    return {
        scope: {},
        restrict: "AE",
        link: function(a, b) {
            b.bind("tap", function() {
                b.hide(), b.next().show(), a.this.$parent.$parent.$parent.prod.buyNum++, //console.log(scope.this.$parent.$parent.$parent.prod.buyNum);
                b.next().children(".select-val").val(a.this.$parent.$parent.$parent.prod.buyNum), 
                b.next().children(".select-val").change();
            });
        }
    };
}), myDirective.directive("selectSub", function() {
    return {
        scope: {},
        restrict: "AE",
        link: function(a, b) {
            b.bind("tap", function() {
                a.this.$parent.$parent.prod.buyNum--, a.this.$parent.$parent.prod.buyNum < 0 && (a.this.$parent.$parent.prod.buyNum = 0, 
                b.parent().hide(), b.parent().prev().show()), b.next().val(a.this.$parent.$parent.prod.buyNum), 
                b.next().change();
            });
        }
    };
}), myDirective.directive("selectAdd", function() {
    return {
        scope: {},
        restrict: "AE",
        link: function(a, b) {
            b.bind("tap", function() {
                a.this.$parent.$parent.prod.buyNum++, b.prev().val(a.this.$parent.$parent.prod.buyNum), 
                b.prev().change();
            });
        }
    };
}), myDirective.directive("goodsDetailClick", function() {
    return {
        restrict: "AE",
        replace: !0,
        template: '<li ng-click="GoodsDetailCtrl()">商品信息</li>',
        link: function(a, b) {
            b.addClass("cur").siblings().removeClass("cur"), b.bind("click", function() {
                b.addClass("cur").siblings().removeClass("cur"), //console.log(element.index(), $('.goods-tab'));
                $(".goods-tab").eq(b.index()).show().siblings().hide(), $(".store-cart").show(), 
                $(".store-cart-mask").show(), $.getScript("lib/other/iscroll-probe.min.js", function() {
                    myScrollGoods = new IScroll("#scroller", {
                        tap: !0,
                        preventDefault: !1
                    }), document.addEventListener("touchmove", function(a) {
                        a.preventDefault();
                    }, !1);
                });
            });
        }
    };
}), myDirective.directive("goodsCommentClick", function() {
    return {
        restrict: "AE",
        replace: !0,
        template: '<li ng-click="GoodsCommentCtrl()">用户评论</li>',
        link: function(a, b) {
            b.bind("click", function() {
                b.addClass("cur").siblings().removeClass("cur"), //console.log(element.index(), $('.goods-tab'));
                $(".goods-tab").eq(b.index()).show().siblings().hide(), $(".store-cart").hide(), 
                $(".store-cart-mask").hide(), $.getScript("lib/other/iscroll-probe.min.js", function() {
                    myScrollGoods = new IScroll("#scroller", {
                        tap: !0,
                        preventDefault: !1
                    }), document.addEventListener("touchmove", function(a) {
                        a.preventDefault();
                    }, !1), goods_detail = !0;
                });
            });
        }
    };
}), myDirective.directive("goodsArticleClick", function() {
    return {
        restrict: "AE",
        replace: !0,
        template: '<li class="{{goods.ArticleShow}}" ng-click="GoodsArticleCtrl()" style="display: none;">图文详情</li>',
        link: function(a, b) {
            b.bind("click", function() {
                b.addClass("cur").siblings().removeClass("cur"), //console.log(element.index(), $('.goods-tab'));
                $(".goods-tab").eq(b.index()).show().siblings().hide(), $(".store-cart").hide(), 
                $(".store-cart-mask").hide(), $.getScript("lib/other/iscroll-probe.min.js", function() {
                    myScrollGoods = new IScroll("#scroller", {
                        tap: !0,
                        preventDefault: !1
                    }), document.addEventListener("touchmove", function(a) {
                        a.preventDefault();
                    }, !1), goods_detail = !0;
                });
            });
        }
    };
}), myDirective.directive("onFinishRenderFilters", function() {
    return {
        restrict: "AE",
        link: function(a, b, c) {
            var d = c.ngSrc;
            loadImage(d, function() {
                waterfallImgIndex++, //console.log(waterfallImgIndex, waterfallImgLen,  scope.$index);
                waterfallImgIndex >= waterfallImgLen && (waterfallImgIndex = 0, //console.log('onFinishRenderFiltersEnd');
                a.$emit("ngRepeatFinished"));
            });
        }
    };
}), myDirective.directive("myDirective", function() {});

var myFilter = angular.module("myFilter", []);

myFilter.filter("fixWxURL", function() {
    return function(a) {
        var b = a.replace(/zline:\/\/shop\/id=/, "http://m.line0.com/#/store/");
        return b;
    };
}), myFilter.filter("parseIntItem", function() {
    return function(a) {
        return parseInt(a);
    };
}), myFilter.filter("toFixedItem", function() {
    return function(a) {
        return (a / 1e3).toFixed(1);
    };
}), myFilter.filter("toTransformBusiness", function() {
    return function(a) {
        return 1 == a ? "营业" : 0 == a ? "预定" : void 0;
    };
}), myFilter.filter("toshopNameFirst", function() {
    return function(a) {
        var b = /[(]{1}.*[)]{1}$/;
        //console.log(patrn.test(item));
        //console.log(patrn.test(item));
        return b.test(a) ? a.replace(b, "") : a;
    };
}), myFilter.filter("toshopNameLast", function() {
    return function(a) {
        var b = /[(]{1}.*[)]{1}$/;
        //console.log(item.match(patrn));
        return void 0 == a ? void 0 : a.match(b) ? a.match(b)[0] : void 0;
    };
}), myFilter.filter("tostoreNameLine", function() {
    return function(a, b) {
        if (void 0 != a) {
            for (var c = a.length, d = 0, e = Math.ceil(b / 2), f = 0; c > f; f++) {
                var g;
                g = a.charAt(f), d++, escape(g).length > 4 && d++;
            }
            return e > d ? "line" : void 0;
        }
    };
}), myFilter.filter("tostoreNameLen", function() {
    return function(a, b) {
        if (void 0 != a) {
            for (var c = a.length, d = 0, e = new String(), f = b, g = 0; c > g; g++) {
                var h;
                if (h = a.charAt(g), d++, escape(h).length > 4 && d++, e = e.concat(h), d >= f) return e = e.concat("...");
            }
            return f > d ? a : void 0;
        }
    };
});

var myService = angular.module("myService", []);

myService.service("myService_1", [ "$scope", function() {} ]), myService.service("myService_2", [ "$scope", function() {} ]);