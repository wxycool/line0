@charset "utf-8";

// border-radius
@mixin border-radius($radius:$border-radius-base) {
	-o-border-radius: $radius;
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

// box-shadow
@mixin box-shadow($x, $y, $blur, $color) {
	-o-box-shadow: $x $y $blur $color;
	-webkit-box-shadow: $x $y $blur $color;
	-moz-box-shadow: $x $y $blur $color;
	-ms-box-shadow: $x $y $blur $color;
	box-shadow: $x $y $blur $color;
}

// background-size
@mixin background-size($width, $height) {
	-o-background-size: $width $height;
	-webkit-background-size: $width $height;
	-moz-background-size: $width $height;
	-ms-background-size: $width $height;
	background-size: $width $height;
}

// transition
@mixin transition($property:all, $duration:1s, $timing:ease, $delay:1s) {
	-o-transition: $property  $duration  $timing  $delay;
	-webkit-transition: $property  $duration  $timing  $delay;
	-moz-transition: $property  $duration  $timing  $delay;
	-ms-transition: $property  $duration  $timing  $delay;
	transition: $property  $duration  $timing  $delay;
}
@mixin transition-property($property...) {
	-webkit-transition-property: $property;
	-moz-transition-property: $property;
	-ms-transition-property: $property;
	transition-property: $property;
}
@mixin transition-duration($duration:1s) {
	-o-transition-duration: $duration;
	-webkit-transition-duration: $duration;
	-moz-transition-duration: $duration;
	-ms-transition-duration: $duration;
	transition-duration: $duration;
}
@mixin transition-timing-function($timing:ease) {
	-o-transition-timing-function: $timing;
	-webkit-transition-timing-function: $timing;
	-moz-transition-timing-function: $timing;
	-ms-transition-timing-function: $timing;
	transition-timing-function: $timing;
}
@mixin transition-delay($delay:1s) {
	-o-transition-delay: $delay;
	-webkit-transition-delay: $delay;
	-moz-transition-delay: $delay;
	-ms-transition-delay: $delay;
	transition-delay: $delay;
}
@mixin transition-transform($transition...) {
	-o-transition: -o-transform $transition;
	-webkit-transition: -webkit-transform $transition;
	-moz-transition: -moz-transform $transition;
	-ms-transition: -moz-transform $transition;
	transition: transform $transition;
}

// transformations
@mixin rotate($degrees) {
	-o-transform: rotate($degrees);
	-webkit-transform: rotate($degrees);
	-moz-transform: rotate($degrees);
	-ms-transform: rotate($degrees);
	transform: rotate($degrees);
}
@mixin scale($args...) {	//$x, $y
	-o-transform: scale($args);
	-webkit-transform: scale($args);
	-moz-transform: scale($args);
	-ms-transform: scale($args);
	transform: scale($args);
}
@mixin translate($args...) {	//$x, $y
	-o-transform: translate($args);
	-webkit-transform: translate($args);
	-moz-transform: translate($args);
	-ms-transform: translate($args);
	transform: translate($args);
}
@mixin skew($x, $y) {
	-o-transform: skew($x, $y);
	-webkit-transform: skew($x, $y);
	-moz-transform: skew($x, $y);
	-ms-transform: skewX($x) skewY($y);
	transform: skew($x, $y);
}
@mixin translate3d($x, $y, $z) {
	-o-transform: translate3d($x, $y, $z);
	-webkit-transform: translate3d($x, $y, $z);
	-moz-transform: translate3d($x, $y, $z);
	-ms-transform: translate3d($x, $y, $z);
	transform: translate3d($x, $y, $z);
}
@mixin rotateX($degrees) {
	-o-transform: rotateX($degrees);
	-webkit-transform: rotateX($degrees);
	-moz-transform: rotateX($degrees);
	-ms-transform: rotateX($degrees);
	transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
	-o-transform: rotateY($degrees);
	-webkit-transform: rotateY($degrees);
	-moz-transform: rotateY($degrees);
	-ms-transform: rotateY($degrees);
	transform: rotateY($degrees);
}
@mixin perspective($perspective) {
	-o-perspective: $perspective;
	-webkit-perspective: $perspective;
	-moz-perspective: $perspective;
	-ms-perspective: $perspective;
	perspective: $perspective;
}
@mixin transform-origin($origin) {
	-o-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	-moz-transform-origin: $origin;
	-ms-transform-origin: $origin;
	transform-origin: $origin;
}

// animations
// $timing:linear/ease/ease-in/ease-out/ease-in-out $count:infinite $direction:alternate
@mixin animation($name, $duration:1s, $timing:ease, $delay:1s, $count:1, $direction:normal) {
	-o-animation: $name $duration $timing $delay $count $direction;
	-webkit-animation: $name $duration $timing $delay $count $direction;
	-moz-animation: $name $duration $timing $delay $count $direction;
	-ms-animation: $name $duration $timing $delay $count $direction;
	animation: $name $duration $timing $delay $count $direction;
}
@mixin animation-name($name) {
	-o-animation-name: $name;
	-webkit-animation-name: $name;
	-moz-animation-name: $name;
	-ms-animation-name: $name;
	animation-name: $name;
}
@mixin animation-duration($duration:1s) {
	-o-animation-duration: $duration;
	-webkit-animation-duration: $duration;
	-moz-animation-duration: $duration;
	-ms-animation-duration: $duration;
	animation-duration: $duration;
}
@mixin animation-timing-function($timing:ease) {
	-o-animation-timing-function: $timing;
	-webkit-animation-timing-function: $timing;
	-moz-animation-timing-function: $timing;
	-ms-animation-timing-function: $timing;
	animation-timing-function: $timing;
}
@mixin animation-delay($delay:1s) {
	-o-animation-delay: $delay;
	-webkit-animation-delay: $delay;
	-moz-animation-delay: $delay;
	-ms-animation-delay: $delay;
	animation-delay: $delay;
}
@mixin animation-iteration-count($count) {
	-o-animation-iteration-count: $count;
	-webkit-animation-iteration-count: $count;
	-moz-animation-iteration-count: $count;
	-ms-animation-iteration-count: $count;
	animation-iteration-count: $count;
}
@mixin animation-direction($direction) {
	-o-animation-direction: $direction;
	-webkit-animation-direction: $direction;
	-moz-animation-direction: $direction;
	-ms-animation-direction: $direction;
	animation-direction: $direction;
}

// @keyframes
//@include keyframes(opacity_name) {
//	0%{ opacity: 0 }
//	50%{ opacity: 0.5 }
//	100%{ opacity: 1 }
//};
//body {
//	@include animation(opacity_name);
//}
@mixin keyframes($name) {
	@-o-keyframes #{$name} {
		@content;
	}
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-ms-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}

// backface-visibility
@mixin backface-visibility($visibility){
	-o-backface-visibility: $visibility;
	-webkit-backface-visibility: $visibility;
	-moz-backface-visibility: $visibility;
	-ms-backface-visibility: $visibility;
	backface-visibility: $visibility;
}

// box-sizing
// content-box/border-box
@mixin box-sizing($boxmodel) {
	-o-box-sizing: $boxmodel;
	-webkit-box-sizing: $boxmodel;
	-moz-box-sizing: $boxmodel;
	-ms-box-sizing: $boxmodel;
	box-sizing: $boxmodel;
}

// user-select
@mixin user-select($select) {
	-o-user-select: $select;
	-webkit-user-select: $select;
	-moz-user-select: $select;
	-ms-user-select: $select;
	user-select: $select;
}

// resizable
@mixin resizable($direction) {
	resize: $direction; //horizontal, vertical, both, none
	overflow: auto;
}

// CSS3 Content Columns
@mixin column-count() {}

// hyphens
@mixin hyphens($mode: auto) {
	-o-hyphens: $mode;
	-webkit-hyphens: $mode;
	-moz-hyphens: $mode;
	-ms-hyphens: $mode;
	hyphens: $mode;
}

// opacity
@mixin opacity($opacity:$opacity-base) {
	-o-opacity: $opacity / 100;
	-webkit-opacity: $opacity / 100;
	-moz-opacity: $opacity / 100;
	-ms-opacity: $opacity / 100;
	opacity: $opacity / 100;
	filter: alpha(opacity=$opacity);
}

// linear-gradient
@mixin gradient-horizontal($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
	background-image: -webkit-linear-gradient(left, color-stop($start-color $start-percent), color-stop($end-color $end-percent)); // Safari 5.1-6, Chrome 10+
	background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
	background-repeat: repeat-x;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down
}
@mixin gradient-vertical($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
	background-image: -webkit-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Safari 5.1-6, Chrome 10+
	background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
	background-repeat: repeat-x;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
	background-repeat: repeat-x;
	background-image: -webkit-linear-gradient($deg, $start-color, $end-color); // Safari 5.1-6, Chrome 10+
	background-image: linear-gradient($deg, $start-color, $end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
}
@mixin gradient-horizontal-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
	background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
	background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
	background-repeat: no-repeat;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-vertical-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
	background-image: -webkit-linear-gradient($start-color, $mid-color $color-stop, $end-color);
	background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
	background-repeat: no-repeat;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
	background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
	background-image: radial-gradient(circle, $inner-color, $outer-color);
	background-repeat: no-repeat;
}
@mixin gradient-striped($color: rgba(255,255,255,.15), $angle: 45deg) {
	background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
	background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}
@mixin reset-filter() {
	filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}
